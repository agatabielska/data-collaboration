percentage = 14.458
pie(c(percentage, 100-percentage), lables = C("Fully described", "Unknown"))
pie(values = c(percentage, 100-percentage), lables = C("Fully described", "Unknown"))
pie(x = c(percentage, 100-percentage), lables = C("Fully described", "Unknown"))
percentage = 14.458
pie(x = c(percentage, 100-percentage), lables = C("Fully described", "Unknown"))
pie(x = c(percentage, 100-percentage), labels = C("Fully described", "Unknown"))
percentage = 14.458
pie(x = c(percentage, 100-percentage), labels = C("Fully described", "Unknown"))
C("Fully described", "Unknown")
C('Fully described', 'Unknown')
c('Fully described', 'Unknown')
percentage = 14.458
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"))
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"), colors=c("blue", "green"))
percentage = 14.458
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"), colors=c("blue", "green"))
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"), col=c("blue", "green"))
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"), col=c("blue", "green"), title = "Bitcoin holdings")
pie(x = c(percentage, 100-percentage), labels = c("Fully described", "Unknown"), col=c("blue", "green"), main = "Bitcoin holdings")
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), percentages, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
percentages = c(percentage, 100-percentage)
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), percentages, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", percentages, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
holding_pctgs = c(percentage, 100-percentage)
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
barplot(fd_pctgs, main = "Fully described", )
fd_pctgs = c(6.211, 2.522, 3.115, 1.817, 0.43, 0.792)
barplot(fd_pctgs, main = "Fully described", )
barplot(fd_pctgs, main = "Fully described", xlab = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"))
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
fd_pctgs = c(6.211, 2.522, 3.115, 1.817, 0.43, 0.792)
barplot(fd_pctgs, main = "Fully described", xlab = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"))
barplot(fd_pctgs, main = "Fully described", xlab = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"), col = c("blue"))
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"), col = c("blue"))
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"), col = c("blue"), ylim=c(0, 10))
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
fd_pctgs = c(6.211, 2.522, 3.115, 1.817, 0.43, 0.792)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Countries", "Public companies", "Private companies", "BTC mining companies", "Defi"), col = c("blue"), ylim=c(0, 10))
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public companies", "Countries", "Private\ncompanies", "Defi", paste("BTC", "\n", "mining")), col = c("blue"), ylim=c(0, 10))
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10))
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings")
fd_pctgs = c(6.211, 3.115, 2.522, 1.817, 0.792, 0.43)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10))
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings", radius=1.05)
fd_pctgs = c(6.211, 3.115, 2.522, 1.817, 0.792, 0.43)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10))
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings", radius=1.05)
fd_pctgs = c(6.211, 3.115, 2.522, 1.817, 0.792, 0.43)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10))
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10), ylab="Percentages")
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings", radius=1.05)
fd_pctgs = c(6.211, 3.115, 2.522, 1.817, 0.792, 0.43)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10), ylab="Percentage")
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10), ylab="Percentage")
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10), ylab="Percentage", yaxt="n")
axis(2, at = 0:10, labels = 0:10)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=(0, 10, 10), ylab="Percentage")
percentage = 14.458
holding_pctgs = c(percentage, 100-percentage)
par(mfrow=c(2,1))
pie(x = percentages, labels = paste(c("Fully described", "Unknown"), "\n", holding_pctgs, "%"), col=c("blue", "green"), main = "Bitcoin holdings", radius=1.05)
fd_pctgs = c(6.211, 3.115, 2.522, 1.817, 0.792, 0.43)
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=(0, 10, 10), ylab="Percentage")
barplot(fd_pctgs, main = "Fully described", names.arg = c("EFTs", "Public\ncompanies", "Countries", "Private\ncompanies", "Defi", "BTC\nmining"), col = c("blue"), ylim=c(0, 10), yaxp=c(0, 10, 10), ylab="Percentage")
install.packages("languageserver")
install.packages("languageserver")
install.packages("irkernel")
install.packages("IRkernel")
shiny::runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = vantage_query("LISTING_STATUS", api_key = "demo")
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = vantage_query("LISTING_STATUS", list(), "demo")
View(res)
data = fromJSON(content(res, "text", encoding = "UTF-8"))
View(data)
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = vantage_query("LISTING_STATUS", list(), "demo")
View(res)
data = content(res, "text", encoding = "UTF-8")
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = read.csv("https://www.alphavantage.co/query?function=LISTING_STATUS&apikey=demo")
res$symbol
typeof(res$symbol)
type(res$symbol)
unpack(res$symbol)
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
is.vector(res$symbol)
vantage_symbols = function(){
url = "https://www.alphavantage.co/query?function=LISTING_STATUS&apikey=demo"
symbols_df = read.csv(url)
return(symbols_df$symbol)
}
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
vantage_symbols()
source("C:/Users/pawel/r_tardius/DV/data-collaboration/api.r", echo = TRUE)
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
twelve_candle('ALE', '1day', '6abb374eb01c45979b59e87327fed240')
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = twelve_candle('ALE', '1day', '6abb374eb01c45979b59e87327fed240')
View(res)
data = fromJSON(content(res, "text", encoding = "UTF-8"))
View(res)
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = twelve_candle('AAPL', '1day', 'demo')
data = fromJSON(content(res, "text", encoding = "UTF-8"))
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = twelve_candle('AAPL', '1day', '6abb374eb01c45979b59e87327fed240')
data = fromJSON(content(res, "text", encoding = "UTF-8"))
View(data)
# vantage_query('TIME_SERIES_WEEKLY', list(c('symbol', 'GOOG'), c('interval', '30min')), apikey)
# q = vantage_query('TOP_GAINERS_LOSERS', list(), apikey)
# vantage_grab(q, 'metadata')
# vantage_daily_plot("GOOG", api_key = apikey)
res = twelve_candle('ALE', '1day', '6abb374eb01c45979b59e87327fed240')
data = fromJSON(content(res, "text", encoding = "UTF-8"))
View(data)
data$meta
data$values
df = data.frame(data$values)
View(df)
View(df)
df = df %>% mutate(datetime = as.Date(datetime))
View(df)
twelve_candle = function(symbol, from, to, api_key){
time_diff = as.numeric(difftime(from, to, units = "days"))
interval = '1month'
if(time_diff < 8){
interval = '4h'
}
else if(time_diff < 63){
interval = '1day'
}
else if(time_diff < 396){
interval = '1week'
}
url = paste0('https://api.twelvedata.com/heikinashicandles?symbol=', symbol, '&interval=', interval, '&start_date=', from, '&end_date', to, '&apikey=', api_key)
res = GET(url)
if(status_code(res) != 200){
return(NULL)
}
data = fromJSON(content(res, "text", encoding = "UTF-8"))
df = data.frame(data$values)
df = df %>% mutate(datetime = as.Date(datetime))
fig = df %>% plot_ly(x = ~datetime, type="candlestick", open = ~heikinopens, close = ~heikincloses, high = ~heikinhighs, low = ~heikinlows)
fig = fig %>% layout(title = paste("Candlestick chart of", symbol), xaxis=list(tickangle=45))
}
twelve_candle = function(symbol, from, to, api_key){
time_diff = as.numeric(difftime(from, to, units = "days"))
interval = '1month'
if(time_diff < 8){
interval = '4h'
}
else if(time_diff < 63){
interval = '1day'
}
else if(time_diff < 396){
interval = '1week'
}
url = paste0('https://api.twelvedata.com/heikinashicandles?symbol=', symbol, '&interval=', interval, '&start_date=', from, '&end_date', to, '&apikey=', api_key)
res = GET(url)
if(status_code(res) != 200){
return(NULL)
}
data = fromJSON(content(res, "text", encoding = "UTF-8"))
df = data.frame(data$values)
df = df %>% mutate(datetime = as.Date(datetime))
fig = df %>% plot_ly(x = ~datetime, type="candlestick", open = ~heikinopens, close = ~heikincloses, high = ~heikinhighs, low = ~heikinlows)
fig = fig %>% layout(title = paste("Candlestick chart of", symbol), xaxis=list(tickangle=45))
return(fig)
}
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
twelve_apikey = '6abb374eb01c45979b59e87327fed240'
runApp('C:/Users/pawel/r_tardius/DV/data-collaboration')
